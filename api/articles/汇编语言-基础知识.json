{"title":"汇编语言_基础知识","uid":"34e6d10f1f52aab5198806db1d7c9e9a","slug":"汇编语言-基础知识","date":"2022-01-17T10:56:41.860Z","updated":"2020-10-20T13:36:19.252Z","comments":true,"path":"api/articles/汇编语言-基础知识.json","keywords":null,"cover":null,"content":"<h1 id=\"第1章-基础知识\"><a href=\"#第1章-基础知识\" class=\"headerlink\" title=\"第1章 基础知识\"></a>第1章 基础知识</h1><h2 id=\"1-1-机器语言\"><a href=\"#1-1-机器语言\" class=\"headerlink\" title=\"1.1 机器语言\"></a>1.1 机器语言</h2><ul>\n<li>机器语言是机器指令的集合。</li>\n<li>机器指令展开来讲就是一台机器可以正确执行的命令。</li>\n</ul>\n<h2 id=\"1-2-汇编语言的产生\"><a href=\"#1-2-汇编语言的产生\" class=\"headerlink\" title=\"1.2 汇编语言的产生\"></a>1.2 汇编语言的产生</h2><ul>\n<li>汇编语言的主体是汇编指令。</li>\n<li>汇编指令和机器指令的差别在于指令的表示方法上。<ul>\n<li>汇编指令是机器指令便于记忆的书写格式。</li>\n<li>汇编指令是机器指令的助记符。</li>\n</ul>\n</li>\n<li>寄存器：简单的讲是CPU中可以存储数据的器件，一个CPU中有多个寄存器。</li>\n<li>程序–&gt;汇编指令–&gt;编译器–&gt;机器码–&gt;计算机</li>\n</ul>\n<h2 id=\"1-3-汇编语言的组成\"><a href=\"#1-3-汇编语言的组成\" class=\"headerlink\" title=\"1.3 汇编语言的组成\"></a>1.3 汇编语言的组成</h2><ul>\n<li>汇编语言由以下三类组成：<br>1、汇编指令（机器码的助记符）<br>2、伪指令（由编译器执行）<br>3、其他符号（由编译器识别）</li>\n<li>汇编语言的核心是汇编指令，它决定了汇编语言的特性。</li>\n</ul>\n<h2 id=\"1-4-存储器\"><a href=\"#1-4-存储器\" class=\"headerlink\" title=\"1.4 存储器\"></a>1.4 存储器</h2><ul>\n<li>CPU是计算机的核心部件，控制整个计算机的运作并进行运算，要想让CPU工作，就必须向它提供指令和数据。</li>\n<li>指令和数据在存储器中存放，也就是平时所说的内存。</li>\n<li>一台PC机中内存的作用仅次于CPU。离开了内存，性能再好的CPU也无法工作。</li>\n<li>磁盘不同于内存，磁盘上的数据或程序如果不读到内存中，就无法被CPU使用。</li>\n</ul>\n<h2 id=\"1-5-指令和数据\"><a href=\"#1-5-指令和数据\" class=\"headerlink\" title=\"1.5 指令和数据\"></a>1.5 指令和数据</h2><ul>\n<li>指令和数据是应用的概念。、</li>\n<li>在内存或磁盘上，指令和数据没有任何区别，都是二进制信息。</li>\n<li>二进制信息：1000 1001 1101 1000<ul>\n<li>89D8H（数据）</li>\n<li>MOV AX,BX（程序）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-6-存储单元\"><a href=\"#1-6-存储单元\" class=\"headerlink\" title=\"1.6 存储单元\"></a>1.6 存储单元</h2><ul>\n<li>存储器被划分为若干个存储单元，每个存储单元从0开始编号；<ul>\n<li>例如：<ul>\n<li>一个存储器有128个存储单元：编号0~127。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>对于大容量的存储器一般用以下单位来计量容量（用B来代表Byte）<ul>\n<li>1KB=1024B</li>\n<li>1MB=1024KB</li>\n<li>1GB=1024MB</li>\n<li>1TB=1024GB</li>\n</ul>\n</li>\n<li>磁盘的容量单位同内存的一样，实际上以上单位是微机中常用的计量单位。</li>\n</ul>\n<h2 id=\"1-7-CPU对存储器的读写\"><a href=\"#1-7-CPU对存储器的读写\" class=\"headerlink\" title=\"1.7 CPU对存储器的读写\"></a>1.7 CPU对存储器的读写</h2><ul>\n<li>CPU想要进行数据的读写，必须和外部器件（标准的说法是芯片）进行三类信息的交互：<ul>\n<li>存储单元的地址（地址信息）；</li>\n<li>器件的选择，读或写命令（控制信息）；</li>\n<li>读或写的数据（数据信息）；</li>\n</ul>\n</li>\n<li>电子计算机能处理、传输的信息都是电信号，电信号用导线传送。</li>\n<li>在计算机中专门有连接CPU和其他芯片的导线，通常称为总线（Bus）。<ul>\n<li>物理上：一根根导线的集合；</li>\n<li>逻辑上划分为：<ul>\n<li>地址总线</li>\n<li>数据总线</li>\n<li>控制总线</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-8-地址总线\"><a href=\"#1-8-地址总线\" class=\"headerlink\" title=\"1.8 地址总线\"></a>1.8 地址总线</h2><ul>\n<li>CPU是通过地址总线来指定存储单元的。</li>\n<li>地址总线上能传送多少个不同的信息，CPU就可以对多少个存储单元进行寻址。</li>\n<li>一个CPU有N根地址总线，则可以说这个CPU的地址总线宽度为N。</li>\n<li>这样的CPU最多可以寻找2的N次方个内存单元。（1个内存单元 == 1字节Byte == 8bit）</li>\n</ul>\n<h2 id=\"1-9-数据总线\"><a href=\"#1-9-数据总线\" class=\"headerlink\" title=\"1.9 数据总线\"></a>1.9 数据总线</h2><ul>\n<li>CPU与内存或其他器件之间的数据传送是通过数据总线来进行的。</li>\n<li>数据总线的宽度决定了CPU和外界的数据传送速度。</li>\n</ul>\n<h2 id=\"1-10-控制总线\"><a href=\"#1-10-控制总线\" class=\"headerlink\" title=\"1.10 控制总线\"></a>1.10 控制总线</h2><ul>\n<li>CPU对外部器件的控制是通过控制总线来进行的。这里控制总线是一个总称。控制总线是一些控制线的集合。</li>\n<li>有多少根控制总线，就意味着CPU提供了对外部器件的多少种控制。</li>\n<li>控制总线的宽度决定了CPU对外部器件的控制能力。</li>\n<li>控制总线发送控制信息。</li>\n</ul>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ul>\n<li>汇编指令是机器指令的助记符，同机器指令一一对应。</li>\n<li>每一种CPU都有自己的汇编指令集。</li>\n<li>CPU可以直接使用的信息在存储器中存放。</li>\n<li>在存储器中指令和数据没有任何区别，都是二进制信息。</li>\n<li>存储单元从零开始顺序编号。</li>\n<li>一个存储单元可以存储8个bit（用作单位写成“b”），即8位二进制数。</li>\n<li>1B(Byte)=8bit、1KB=1024B、1MB=1024KB、1GB=1024MB</li>\n<li>每一个CPU芯片都有许多管脚，这些管脚和总线相连。也可以说，这些管脚引出总线。<br>一个CPU可以引出三种总线的宽度标志了这个CPU的不同方面的性能：<ul>\n<li>地址总线的宽度决定了CPU的寻址能力</li>\n<li>数据总线的宽度决定了CPU与其它器件进行数据传送时的一次数据传送量；</li>\n<li>控制总线宽度决定了CPU对系统中其它器件的控制能力。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-11-内存地址空间（概述）\"><a href=\"#1-11-内存地址空间（概述）\" class=\"headerlink\" title=\"1.11 内存地址空间（概述）\"></a>1.11 内存地址空间（概述）</h2><ul>\n<li>最终运行程序的是CPU，我们用汇编编程的时候，必须要从CPU角度考虑问题。</li>\n<li>对CPU来讲，系统中的所有存储器中的存储单元都处于一个统一的逻辑存储器中，它的容量受CPU<br>寻址能力的限制。这个逻辑存储器即是内存地址空间。</li>\n</ul>\n<h2 id=\"1-12-主板\"><a href=\"#1-12-主板\" class=\"headerlink\" title=\"1.12 主板\"></a>1.12 主板</h2><ul>\n<li>在每一台PC机中，都有一个主板，主板上有核心器件和一些主要器件。</li>\n<li>这些器件通过总线（地址总线、数据总线、控制总线）相连。</li>\n</ul>\n<h2 id=\"1-13-接口卡\"><a href=\"#1-13-接口卡\" class=\"headerlink\" title=\"1.13 接口卡\"></a>1.13 接口卡</h2><ul>\n<li>计算机系统中，所有可用程序控制其工作的设备，必须收到CPU的控制。</li>\n<li>CPU对外部设备不能直接控制。</li>\n</ul>\n<h2 id=\"1-14-各类存储器芯片\"><a href=\"#1-14-各类存储器芯片\" class=\"headerlink\" title=\"1.14 各类存储器芯片\"></a>1.14 各类存储器芯片</h2><ul>\n<li>随机存储器（RAM）和只读存储器（ROM）</li>\n</ul>\n","text":"第1章 基础知识1.1 机器语言 机器语言是机器指令的集合。 机器指令展开来讲就是一台机器可以正确执行的命令。 1.2 汇编语言的产生 汇编语言的主体是汇编指令。 汇编指令和机器指令的差别在于指令的表示方法上。 汇编指令是机器指令便于记忆的书写格式。 汇编指令是机器指令的助记符。...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"汇编语言","slug":"汇编语言","count":4,"path":"api/categories/汇编语言.json"}],"tags":[{"name":"汇编语言","slug":"汇编语言","count":4,"path":"api/tags/汇编语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC1%E7%AB%A0-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">第1章 基础知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E6%9C%BA%E5%99%A8%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">1.1 机器语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BA%A7%E7%94%9F\"><span class=\"toc-text\">1.2 汇编语言的产生</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%9A%84%E7%BB%84%E6%88%90\"><span class=\"toc-text\">1.3 汇编语言的组成</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-4-%E5%AD%98%E5%82%A8%E5%99%A8\"><span class=\"toc-text\">1.4 存储器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-5-%E6%8C%87%E4%BB%A4%E5%92%8C%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1.5 指令和数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-6-%E5%AD%98%E5%82%A8%E5%8D%95%E5%85%83\"><span class=\"toc-text\">1.6 存储单元</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-7-CPU%E5%AF%B9%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E8%AF%BB%E5%86%99\"><span class=\"toc-text\">1.7 CPU对存储器的读写</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-8-%E5%9C%B0%E5%9D%80%E6%80%BB%E7%BA%BF\"><span class=\"toc-text\">1.8 地址总线</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-9-%E6%95%B0%E6%8D%AE%E6%80%BB%E7%BA%BF\"><span class=\"toc-text\">1.9 数据总线</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-10-%E6%8E%A7%E5%88%B6%E6%80%BB%E7%BA%BF\"><span class=\"toc-text\">1.10 控制总线</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-11-%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%EF%BC%88%E6%A6%82%E8%BF%B0%EF%BC%89\"><span class=\"toc-text\">1.11 内存地址空间（概述）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-12-%E4%B8%BB%E6%9D%BF\"><span class=\"toc-text\">1.12 主板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-13-%E6%8E%A5%E5%8F%A3%E5%8D%A1\"><span class=\"toc-text\">1.13 接口卡</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-14-%E5%90%84%E7%B1%BB%E5%AD%98%E5%82%A8%E5%99%A8%E8%8A%AF%E7%89%87\"><span class=\"toc-text\">1.14 各类存储器芯片</span></a></li></ol></li></ol>","author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"汇编语言_寄存器（CPU工作原理）","uid":"f400084cdc57c1ce1c5f51d765d1c6cd","slug":"汇编语言-寄存器（CPU工作原理）","date":"2022-01-17T10:56:41.865Z","updated":"2020-10-21T07:55:54.579Z","comments":true,"path":"api/articles/汇编语言-寄存器（CPU工作原理）.json","keywords":null,"cover":null,"text":"第2章 寄存器（CPU工作原理） CPU概述 一个典型的CPU由运算器、控制器、寄存器等器件组成，这些器件靠内部总线相连。 区别： 内部总线实现CPU内部各个器件之间的联系。 外部总线实现CPU和主板上其他器件的联系。 寄存器概述 8086CPU有14个寄存器 AX、BX、CX、...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"汇编语言","slug":"汇编语言","count":4,"path":"api/categories/汇编语言.json"}],"tags":[{"name":"汇编语言","slug":"汇编语言","count":4,"path":"api/tags/汇编语言.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"机场运营管理_民用航空系统","uid":"6cc08f7c302affc9e1e3fbaf89278f8f","slug":"机场运营管理-民用航空系统","date":"2022-01-17T10:56:41.849Z","updated":"2020-10-20T13:35:08.909Z","comments":true,"path":"api/articles/机场运营管理-民用航空系统.json","keywords":null,"cover":null,"text":"第1章 民用航空系统==1944年 《芝加哥公约》====1947年 成立国际民航组织(ICAO)== 民用航空的概念==民用航空==是指使用各类航空器从事除了军事性质（包括国防警察和海关）以外的所有的航空活动。1919年==《巴黎公约》==是世界上第一部国家间的航空法。 商业航...","link":"","photos":[],"count_time":{"symbolsCount":482,"symbolsTime":"1 mins."},"categories":[{"name":"机场运营管理","slug":"机场运营管理","count":5,"path":"api/categories/机场运营管理.json"}],"tags":[{"name":"机场运营管理","slug":"机场运营管理","count":5,"path":"api/tags/机场运营管理.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}