{"title":"操作系统-输入输出系统","uid":"d58045765cfed11a5e19353201052243","slug":"操作系统-输入输出系统","date":"2022-01-17T10:56:41.800Z","updated":"2021-01-18T10:05:55.416Z","comments":true,"path":"api/articles/操作系统-输入输出系统.json","keywords":null,"cover":[],"content":"<h1 id=\"第六章：输入输出系统\"><a href=\"#第六章：输入输出系统\" class=\"headerlink\" title=\"第六章：输入输出系统\"></a>第六章：输入输出系统</h1><h2 id=\"I-O系统的功能，模型和接口\"><a href=\"#I-O系统的功能，模型和接口\" class=\"headerlink\" title=\"I/O系统的功能，模型和接口\"></a>I/O系统的功能，模型和接口</h2><h3 id=\"I-O系统管理的对象是I-O设备和相应的设备控制器。\"><a href=\"#I-O系统管理的对象是I-O设备和相应的设备控制器。\" class=\"headerlink\" title=\"I/O系统管理的对象是I/O设备和相应的设备控制器。\"></a>I/O系统管理的对象是I/O设备和相应的设备控制器。</h3><h3 id=\"I-O系统的基本功能\"><a href=\"#I-O系统的基本功能\" class=\"headerlink\" title=\"I/O系统的基本功能\"></a>I/O系统的基本功能</h3><ul>\n<li>隐藏物理设备的细节</li>\n<li>与设备的无关性</li>\n<li>提高处理机和I/O设备的利用率</li>\n<li>对I/O设备进行控制</li>\n<li>确保对设备的正确共享</li>\n<li>错误处理</li>\n</ul>\n<h3 id=\"I-O软件的层次结构\"><a href=\"#I-O软件的层次结构\" class=\"headerlink\" title=\"I/O软件的层次结构\"></a>I/O软件的层次结构</h3><ul>\n<li>用户层I/O软件</li>\n<li>设备独立性软件</li>\n<li>设备驱动程序（厂家开发）</li>\n<li>中断处理程序</li>\n<li>硬件</li>\n</ul>\n<h3 id=\"I-O系统的分层\"><a href=\"#I-O系统的分层\" class=\"headerlink\" title=\"I/O系统的分层\"></a>I/O系统的分层</h3><ul>\n<li>中断处理程序</li>\n<li>设备驱动程序</li>\n<li>设备独立性软件</li>\n</ul>\n<h3 id=\"I-O系统接口\"><a href=\"#I-O系统接口\" class=\"headerlink\" title=\"I/O系统接口\"></a>I/O系统接口</h3><ul>\n<li>块设备接口<ul>\n<li>指以数据块为单位来组织和传送数据信息的设备</li>\n<li>典型的块设备是磁盘、光盘</li>\n<li>块设备的基本特征<ul>\n<li>①传输速率较高，通常每秒钟为几兆位；</li>\n<li>②它是可寻址的，即可随机地读/写任意一块；</li>\n<li>③磁盘设备的I/O采用DMA方式。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>流设备接口<ul>\n<li>又称字符设备指以单个字符为单位来传送数据信息的设备</li>\n<li>这类设备一般用于数据的输入和输出，有交互式终端、打印机</li>\n<li>字符设备的基本特征<ul>\n<li>①传输速率较低；</li>\n<li>②不可寻址，即不能指定输入时的源地址或输出时的目标地址；</li>\n<li>③字符设备的I/O常采用中断驱动方式。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>网络通信接口<ul>\n<li>提供网络接入功能，使计算机能通过网络与其他计算机进行通信或上网浏览。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"I-O设备和设备控制器\"><a href=\"#I-O设备和设备控制器\" class=\"headerlink\" title=\"I/O设备和设备控制器\"></a>I/O设备和设备控制器</h2><h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><ul>\n<li>使用特性分<ul>\n<li>存储设备</li>\n<li>I/O设备</li>\n</ul>\n</li>\n<li>传输速率分<ul>\n<li>低速设备（几字节——几百字节）<ul>\n<li>典型的设备有键盘、鼠标、语音的输入</li>\n</ul>\n</li>\n<li>中速设备（数千——数万字节）<ul>\n<li>典型的设备有行式打印机、激光打印机</li>\n</ul>\n</li>\n<li>高速设备（数十万——千兆字节）<ul>\n<li>典型的设备有磁带机、磁盘机、光盘机</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"设备并不是直接与CPU进行通信，而是与设备控制器通信。在设备与设备控制器之间应该有一个接口。\"><a href=\"#设备并不是直接与CPU进行通信，而是与设备控制器通信。在设备与设备控制器之间应该有一个接口。\" class=\"headerlink\" title=\"设备并不是直接与CPU进行通信，而是与设备控制器通信。在设备与设备控制器之间应该有一个接口。\"></a>设备并不是直接与CPU进行通信，而是与设备控制器通信。在设备与设备控制器之间应该有一个接口。</h3><ul>\n<li>数据信号：控制器 ←  设备 ←  控制器<ul>\n<li>传送数据信号，输入、输出bit</li>\n</ul>\n</li>\n<li>控制信号: 控制器  →  设备<ul>\n<li>执行读、写操作的信号</li>\n</ul>\n</li>\n<li>状态信号：设备当前使用状态</li>\n</ul>\n<h3 id=\"设备控制器\"><a href=\"#设备控制器\" class=\"headerlink\" title=\"设备控制器\"></a>设备控制器</h3><ul>\n<li>主要功能：控制一个或多个I/O设备，以实现I/O设备和计算机之间的数据交换</li>\n<li>基本功能<ul>\n<li>接收和识别命令<ul>\n<li>控制寄存器、命令译码器</li>\n</ul>\n</li>\n<li>数据交换<ul>\n<li>实现CPU与控制器，控制器与设备间的数据交换</li>\n</ul>\n</li>\n<li>标识和报告设备的状态</li>\n<li>地址识别<ul>\n<li>配置地址译码器，识别不同的设备</li>\n</ul>\n</li>\n<li>数据缓冲区</li>\n<li>差错控制</li>\n</ul>\n</li>\n<li>设备控制器的组成<ul>\n<li>设备控制器与处理机（CPU）的接口<ul>\n<li>实现CPU与设备控制器之间的通信</li>\n</ul>\n</li>\n<li>设备控制器与设备的接口<ul>\n<li>控制器可连接多个设备</li>\n</ul>\n</li>\n<li>I/O逻辑<ul>\n<li>实现对设备的控制</li>\n<li>CPU利用该逻辑向控制器发送I/O命令</li>\n<li>命令、地址译码</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"内存映像I-O\"><a href=\"#内存映像I-O\" class=\"headerlink\" title=\"内存映像I/O\"></a>内存映像I/O</h3><ul>\n<li>驱动程序将抽象I/O命令转换出的一系列具体的命令，参数等数据装入设备控制器的相应寄存器，由控制器来执行这些命令，具体实施对I/O设备的操作</li>\n</ul>\n<h3 id=\"I-O通道\"><a href=\"#I-O通道\" class=\"headerlink\" title=\"I/O通道\"></a>I/O通道</h3><ul>\n<li>目的：建立独立的I/O操作(组织, 管理和结束)，使由CPU处理的I/O工作转由通道完成（解放CPU，实现并行）</li>\n<li>什么是I/O通道？<ul>\n<li> 是一种特殊的处理机，具有通过执行通道程序完成I/O操作的指令</li>\n<li> 特点：指令单一(局限于与I/O操作相关的指令)，与CPU共享内存</li>\n</ul>\n</li>\n<li>基本过程：<ul>\n<li>CPU向通道发出I/O指令-&gt;通道接收指令-&gt;从内存取出通道程序处理I/O-&gt;向CPU发出中断</li>\n</ul>\n</li>\n<li>通道类型<ul>\n<li>字节多路通道<ul>\n<li>低中速连接子通道时间片轮转方式共享主通道</li>\n<li>字节多路通道不适于连接高速设备，这推动了按数组方式进行数据传送的数组选择通道的形成。</li>\n</ul>\n</li>\n<li>数组选择通道<ul>\n<li>这种通道可以连接多台高速设备，但只含有一个分配型子通道，在一段时间内只能执行一道通道程序， 控制一台设备进行数据传送， 直至该设备传送完毕释放该通道。这种通道的利用率很低。</li>\n</ul>\n</li>\n<li>数组多路通道<ul>\n<li>含有多个非分配型子通道，前两种通道的组合，通道利用率较好</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>瓶颈问题<ul>\n<li>原因;通道不足</li>\n<li>解决办法：增加设备到主机间的通路，而不增加通道（结果类似RS触发器）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"中断机构和中断处理程序\"><a href=\"#中断机构和中断处理程序\" class=\"headerlink\" title=\"中断机构和中断处理程序\"></a>中断机构和中断处理程序</h2><h3 id=\"中断\"><a href=\"#中断\" class=\"headerlink\" title=\"中断\"></a>中断</h3><ul>\n<li>分类<ul>\n<li>中断（外部触发）<ul>\n<li>对外部I/O设备发出的中断信号的响应</li>\n</ul>\n</li>\n<li>陷入（内部原因：除0）<ul>\n<li>由CPU内部事件引起的中断</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>中断向量表（类比51单片机）<ul>\n<li>中断程序的入口地址表</li>\n</ul>\n</li>\n<li>中断优先级<ul>\n<li>对紧急程度不同的中断处理方式</li>\n</ul>\n</li>\n<li>对多中断源的处理方式<ul>\n<li>屏蔽中断</li>\n<li>嵌套中断</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"中断处理程序\"><a href=\"#中断处理程序\" class=\"headerlink\" title=\"中断处理程序\"></a>中断处理程序</h3><ul>\n<li>测定是否有未响应的中断信号</li>\n<li>保护被中断进程的CPU环境</li>\n<li>转入相应的设备处理程序</li>\n<li>中断处理</li>\n<li>恢复CPU 的现场并退出中断</li>\n</ul>\n<h2 id=\"设备驱动程序\"><a href=\"#设备驱动程序\" class=\"headerlink\" title=\"设备驱动程序\"></a>设备驱动程序</h2><h3 id=\"是I-O进程与设备控制器之间的通信程序，又由于它常以进程的形式存在，故以后就简称为设备驱动进程\"><a href=\"#是I-O进程与设备控制器之间的通信程序，又由于它常以进程的形式存在，故以后就简称为设备驱动进程\" class=\"headerlink\" title=\"是I/O进程与设备控制器之间的通信程序，又由于它常以进程的形式存在，故以后就简称为设备驱动进程\"></a>是I/O进程与设备控制器之间的通信程序，又由于它常以进程的形式存在，故以后就简称为设备驱动进程</h3><h3 id=\"主要任务是接受来自它上一层的与设备无关软件的抽象请求，并执行这个请求。\"><a href=\"#主要任务是接受来自它上一层的与设备无关软件的抽象请求，并执行这个请求。\" class=\"headerlink\" title=\"主要任务是接受来自它上一层的与设备无关软件的抽象请求，并执行这个请求。\"></a>主要任务是接受来自它上一层的与设备无关软件的抽象请求，并执行这个请求。</h3><h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><ul>\n<li><ol>\n<li>接收由I/O进程发来的命令和参数， 并将命令中的抽象要求转换为具体要求。例如，将磁盘块号转换为磁盘的盘面、 磁道号及扇区号。</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>检查用户I/O请求的合法性，了解I/O设备的状态，传递有关参数，设置设备的工作方式。 </li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>发出I/O命令，如果设备空闲，便立即启动I/O设备去完成指定的I/O操作；如果设备处于忙碌状态，则将请求者的请求块挂在设备队列上等待。</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>及时响应由控制器或通道发来的中断请求，并根据其中断类型调用相应的中断处理程序进行处理。</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>对于设置有通道的计算机系统，驱动程序还应能够根据用户的I/O请求，自动地构成通道程序。 </li>\n</ol>\n</li>\n</ul>\n<h3 id=\"设备驱动程序的处理过程\"><a href=\"#设备驱动程序的处理过程\" class=\"headerlink\" title=\"设备驱动程序的处理过程\"></a>设备驱动程序的处理过程</h3><ul>\n<li>将用户和上层软件对设备控制的抽象要求转换成对设备的具体要求，如对抽象要求的盘块号转换为磁盘的盘面、磁道及扇区。</li>\n<li>检查I/O请求的合理性。</li>\n<li>读出和检查设备的状态，确保设备处于就绪态。</li>\n<li>传送必要的参数，如传送的字节数，数据在主存的首址等。</li>\n<li>工作方式的设置。</li>\n<li>启动I/O设备，并检查启动是否成功，如成功则将控制返回给I/O控制系统，在I/O设备忙于传送数据时，该用户进程把自己阻塞，直至中断到来才将它唤醒，而CPU可干别的事。</li>\n</ul>\n<h3 id=\"对I-O设备的控制方式\"><a href=\"#对I-O设备的控制方式\" class=\"headerlink\" title=\"对I/O设备的控制方式\"></a>对I/O设备的控制方式</h3><ul>\n<li>I/O控制的宗旨<ul>\n<li>减少CPU对I/O控制的干预</li>\n<li>充分利用CPU完成数据处理工作</li>\n</ul>\n</li>\n<li>I/O 控制方式<ul>\n<li>轮询的可编程I/O方式</li>\n<li>中断驱动I/O方式</li>\n<li>DMA控制方式</li>\n<li>I/O通道控制方式</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"DMA控制器组成\"><a href=\"#DMA控制器组成\" class=\"headerlink\" title=\"DMA控制器组成\"></a>DMA控制器组成</h3><ul>\n<li>主机与DMA控制器的接口</li>\n<li>DMA控制器与块设备的接口</li>\n<li>I/O控制逻辑</li>\n</ul>\n<h2 id=\"与设备无关的I-O软件\"><a href=\"#与设备无关的I-O软件\" class=\"headerlink\" title=\"与设备无关的I/O软件\"></a>与设备无关的I/O软件</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li>含义： 应用程序独立于具体使用的物理设备。</li>\n<li>驱动程序是一个与硬件(或设备)紧密相关的软件。为实现设备独立性，须在驱动程序上设置一层软件，称为设备独立性软件。</li>\n<li>设备独立性(Device Independence)的优点<ul>\n<li>以物理设备名使用设备</li>\n<li>引入了逻辑设备名</li>\n<li>逻辑设备名称到物理设备名称的转换（易于实现I/O重定向）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"与设备无关的软件\"><a href=\"#与设备无关的软件\" class=\"headerlink\" title=\"与设备无关的软件\"></a>与设备无关的软件</h3><ul>\n<li>设备驱动程序的统一接口</li>\n<li>缓存管理</li>\n<li>差错控制</li>\n<li>对独立设备的分配与回收</li>\n<li>独立于设备的逻辑数据块</li>\n</ul>\n<h3 id=\"设备分配中的数据结构\"><a href=\"#设备分配中的数据结构\" class=\"headerlink\" title=\"设备分配中的数据结构\"></a>设备分配中的数据结构</h3><ul>\n<li>设备控制表DCT</li>\n<li>控制器控制表COCT</li>\n<li>通道控制表CHCT</li>\n<li>显然，在有通道的系统中，一个进程只有获得了通道，控制器和所需设备三者之后，才具备了进行I/O操作的物理条件</li>\n<li>系统设备表SDT</li>\n<li>逻辑设备表LUT</li>\n<li>分配的流程，从资源多的到资源紧张的:LUT-&gt;SDT-&gt;DCT-&gt;COCT-&gt;CHCT</li>\n<li>在申请设备的过程中，根据用户请求的I/O设备的逻辑名，查找逻辑设备和物理设备的映射表；以物理设备为索引，查找SDT，找到该设备所连接的DCT；继续查找与该设备连接的COCT和CHCT，就找到了一条通路。</li>\n</ul>\n<h2 id=\"用户层的I-O软件\"><a href=\"#用户层的I-O软件\" class=\"headerlink\" title=\"用户层的I/O软件\"></a>用户层的I/O软件</h2><h3 id=\"系统调用与库函数\"><a href=\"#系统调用与库函数\" class=\"headerlink\" title=\"系统调用与库函数\"></a>系统调用与库函数</h3><ul>\n<li>OS向用户提供的所有功能，用户进程都必须通过系统调用来获取</li>\n<li>在C语言以及UNIX系统中，系统调用（如read）与各系统调用所使用的库函数（如read）之间几乎是一一对应的。而微软的叫Win32API</li>\n</ul>\n<h3 id=\"假脱机系统（spooling）\"><a href=\"#假脱机系统（spooling）\" class=\"headerlink\" title=\"假脱机系统（spooling）\"></a>假脱机系统（spooling）</h3><ul>\n<li>spooling技术是对脱机输入/输出系统的模拟</li>\n<li>主要组成<ul>\n<li>输入/输出井</li>\n<li>输入/输出缓冲区</li>\n<li>输入/输出进程</li>\n<li>井管理程序</li>\n</ul>\n</li>\n<li>特点（体现操作系统的虚拟性）<ul>\n<li>提高了I/O的速度<ul>\n<li>对数据所进行的I/O操作，已从对低速设备演变为对输入井或输出井中的数据存取。</li>\n</ul>\n</li>\n<li>将独占设备改造为共享设备<ul>\n<li>实际分给用户进程的不是打印设备，而是共享输出井中的存储区域 </li>\n</ul>\n</li>\n<li>实现了虚拟设备功能<ul>\n<li>将独占设备变成多台独占的虚拟设备。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"缓冲区管理\"><a href=\"#缓冲区管理\" class=\"headerlink\" title=\"缓冲区管理\"></a>缓冲区管理</h2><h3 id=\"缓冲的引入（原因）\"><a href=\"#缓冲的引入（原因）\" class=\"headerlink\" title=\"缓冲的引入（原因）\"></a>缓冲的引入（原因）</h3><ul>\n<li>缓和CPU与I/O设备间速度不匹配的矛盾</li>\n<li>减少对CPU的中断频率，放宽对CPU中断响应时间的限制</li>\n<li>提高CPU和I/O设备之间的并行性</li>\n<li>解决数据粒度不匹配的问题</li>\n</ul>\n<h3 id=\"单缓冲区\"><a href=\"#单缓冲区\" class=\"headerlink\" title=\"单缓冲区\"></a>单缓冲区</h3><ul>\n<li>即在CPU计算的时候，将数据数据输入到缓冲区(大小取决与T和C的大小)</li>\n</ul>\n<h3 id=\"双缓冲区\"><a href=\"#双缓冲区\" class=\"headerlink\" title=\"双缓冲区\"></a>双缓冲区</h3><ul>\n<li>即允许CPU连续工作（T不断）</li>\n</ul>\n<h3 id=\"环形缓冲区（专为生产者和消费者打造）\"><a href=\"#环形缓冲区（专为生产者和消费者打造）\" class=\"headerlink\" title=\"环形缓冲区（专为生产者和消费者打造）\"></a>环形缓冲区（专为生产者和消费者打造）</h3><ul>\n<li>组成<ul>\n<li>多个缓冲区</li>\n<li>多个指针</li>\n</ul>\n</li>\n<li>使用<ul>\n<li>Getbuf过程</li>\n<li>Releasebuf过程</li>\n</ul>\n</li>\n<li>同步问题</li>\n</ul>\n<h3 id=\"缓冲池-理解为更大的缓冲区\"><a href=\"#缓冲池-理解为更大的缓冲区\" class=\"headerlink\" title=\"缓冲池(理解为更大的缓冲区)\"></a>缓冲池(理解为更大的缓冲区)</h3><ul>\n<li>组成<ul>\n<li>空白缓冲队列（emq）<ul>\n<li>由空缓冲区链接而成F(emq)，L(emq)分别指向该队列首尾缓冲区</li>\n</ul>\n</li>\n<li>输入队列（inq）<ul>\n<li>由装满输入数据的缓冲区链接而成F(inq)，L(inq)分别指向该队列首尾缓冲区</li>\n</ul>\n</li>\n<li>输出队列（outq）<ul>\n<li>由装满输出数据的缓冲区链接而成F(outq)， L(outq)分别指向该队列首尾缓冲</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Getbuf和Putbuf过程<ul>\n<li>收容：缓冲池接收外界数据</li>\n<li>提取：外界从缓冲池获得数据</li>\n</ul>\n</li>\n<li>缓冲区工作方式（从缓冲区的角度来看）<ul>\n<li>收容输入</li>\n<li>提取输入</li>\n<li>收容输出</li>\n<li>提取输出</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"磁盘存储器的性能和调度\"><a href=\"#磁盘存储器的性能和调度\" class=\"headerlink\" title=\"磁盘存储器的性能和调度\"></a>磁盘存储器的性能和调度</h2><h3 id=\"数据的组织和格式\"><a href=\"#数据的组织和格式\" class=\"headerlink\" title=\"数据的组织和格式\"></a>数据的组织和格式</h3><h3 id=\"磁盘的类型\"><a href=\"#磁盘的类型\" class=\"headerlink\" title=\"磁盘的类型\"></a>磁盘的类型</h3><ul>\n<li>固定头磁盘（贵）</li>\n<li>移动头磁盘</li>\n</ul>\n<h3 id=\"磁盘访问的时间（关键）\"><a href=\"#磁盘访问的时间（关键）\" class=\"headerlink\" title=\"磁盘访问的时间（关键）\"></a>磁盘访问的时间（关键）</h3><ul>\n<li>寻道时间Ts=m*n+s</li>\n<li>旋转延迟时间Tr</li>\n<li>传输时间Tt=b/rN</li>\n<li>总时间Ta=Ts+1/2r+b/rN</li>\n</ul>\n<h3 id=\"磁盘的调度算法（掌握图表）\"><a href=\"#磁盘的调度算法（掌握图表）\" class=\"headerlink\" title=\"磁盘的调度算法（掌握图表）\"></a>磁盘的调度算法（掌握图表）</h3><ul>\n<li>先来先服务（FCFS）<ul>\n<li>优点：公平，简单</li>\n<li>缺点：可能导致某些进程的请求长期得不到满足</li>\n</ul>\n</li>\n<li>最短寻道时间优先（SSTF）<ul>\n<li>说明：要求访问的磁道和当前磁头所在的磁道距离最近，以使每次的寻道时间最短</li>\n</ul>\n</li>\n<li>扫描算法（SCAN）<ul>\n<li>扫描算法不仅考虑到欲访问的磁道与当前磁道间的距离，更优先考虑的是磁道当前的移动方向</li>\n<li>联想电梯的运行</li>\n<li>可防止低优先级进程出现“饥饿”的现象</li>\n</ul>\n</li>\n<li>循环扫描算法（CSCAN）<ul>\n<li>算法规定磁头单向移动，例如，只是自里向外移动，当磁头移到最外的磁道并访问后，磁头立即返回到最里的欲访问磁道，亦即将最小磁道号紧接着最大磁道号构成循环，进行循环扫描</li>\n</ul>\n</li>\n<li>NStepScan算法<ul>\n<li>N步SCAN算法是将磁盘请求队列分成若干个长度为N的子队列，磁盘调度将按FCFS算法依次这些子队列。</li>\n</ul>\n</li>\n<li>FSCAN算法<ul>\n<li>是Nstepscan算法的简化，将磁盘请求队列分成两个子队列</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/mrdutq/cdn/images/os/ch6.png\" alt=\"OS—CH6\"></p>\n","text":"第六章：输入输出系统I/O系统的功能，模型和接口I/O系统管理的对象是I/O设备和相应的设备控制器。I/O系统的基本功能 隐藏物理设备的细节 与设备的无关性 提高处理机和I/O设备的利用率 对I/O设备进行控制 确保对设备的正确共享 错误处理 I/O软件的层次结构 用户层I/O软...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/tags/操作系统.json"},{"name":"输入输出系统","slug":"输入输出系统","count":1,"path":"api/tags/输入输出系统.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9A%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">第六章：输入输出系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#I-O%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%8C%E6%A8%A1%E5%9E%8B%E5%92%8C%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">I&#x2F;O系统的功能，模型和接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#I-O%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%98%AFI-O%E8%AE%BE%E5%A4%87%E5%92%8C%E7%9B%B8%E5%BA%94%E7%9A%84%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E5%99%A8%E3%80%82\"><span class=\"toc-text\">I&#x2F;O系统管理的对象是I&#x2F;O设备和相应的设备控制器。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#I-O%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">I&#x2F;O系统的基本功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#I-O%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">I&#x2F;O软件的层次结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#I-O%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%88%86%E5%B1%82\"><span class=\"toc-text\">I&#x2F;O系统的分层</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#I-O%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">I&#x2F;O系统接口</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#I-O%E8%AE%BE%E5%A4%87%E5%92%8C%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">I&#x2F;O设备和设备控制器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">分类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E5%A4%87%E5%B9%B6%E4%B8%8D%E6%98%AF%E7%9B%B4%E6%8E%A5%E4%B8%8ECPU%E8%BF%9B%E8%A1%8C%E9%80%9A%E4%BF%A1%EF%BC%8C%E8%80%8C%E6%98%AF%E4%B8%8E%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E5%99%A8%E9%80%9A%E4%BF%A1%E3%80%82%E5%9C%A8%E8%AE%BE%E5%A4%87%E4%B8%8E%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E5%99%A8%E4%B9%8B%E9%97%B4%E5%BA%94%E8%AF%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3%E3%80%82\"><span class=\"toc-text\">设备并不是直接与CPU进行通信，而是与设备控制器通信。在设备与设备控制器之间应该有一个接口。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">设备控制器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E6%98%A0%E5%83%8FI-O\"><span class=\"toc-text\">内存映像I&#x2F;O</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#I-O%E9%80%9A%E9%81%93\"><span class=\"toc-text\">I&#x2F;O通道</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E6%9C%BA%E6%9E%84%E5%92%8C%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">中断机构和中断处理程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD\"><span class=\"toc-text\">中断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">中断处理程序</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">设备驱动程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%AFI-O%E8%BF%9B%E7%A8%8B%E4%B8%8E%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E5%99%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1%E7%A8%8B%E5%BA%8F%EF%BC%8C%E5%8F%88%E7%94%B1%E4%BA%8E%E5%AE%83%E5%B8%B8%E4%BB%A5%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AD%98%E5%9C%A8%EF%BC%8C%E6%95%85%E4%BB%A5%E5%90%8E%E5%B0%B1%E7%AE%80%E7%A7%B0%E4%B8%BA%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">是I&#x2F;O进程与设备控制器之间的通信程序，又由于它常以进程的形式存在，故以后就简称为设备驱动进程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E4%BB%BB%E5%8A%A1%E6%98%AF%E6%8E%A5%E5%8F%97%E6%9D%A5%E8%87%AA%E5%AE%83%E4%B8%8A%E4%B8%80%E5%B1%82%E7%9A%84%E4%B8%8E%E8%AE%BE%E5%A4%87%E6%97%A0%E5%85%B3%E8%BD%AF%E4%BB%B6%E7%9A%84%E6%8A%BD%E8%B1%A1%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%B9%B6%E6%89%A7%E8%A1%8C%E8%BF%99%E4%B8%AA%E8%AF%B7%E6%B1%82%E3%80%82\"><span class=\"toc-text\">主要任务是接受来自它上一层的与设备无关软件的抽象请求，并执行这个请求。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">设备驱动程序的处理过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9I-O%E8%AE%BE%E5%A4%87%E7%9A%84%E6%8E%A7%E5%88%B6%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">对I&#x2F;O设备的控制方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DMA%E6%8E%A7%E5%88%B6%E5%99%A8%E7%BB%84%E6%88%90\"><span class=\"toc-text\">DMA控制器组成</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E8%AE%BE%E5%A4%87%E6%97%A0%E5%85%B3%E7%9A%84I-O%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">与设备无关的I&#x2F;O软件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基本概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E8%AE%BE%E5%A4%87%E6%97%A0%E5%85%B3%E7%9A%84%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">与设备无关的软件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E5%A4%87%E5%88%86%E9%85%8D%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">设备分配中的数据结构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E5%B1%82%E7%9A%84I-O%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">用户层的I&#x2F;O软件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B8%8E%E5%BA%93%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">系统调用与库函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%81%87%E8%84%B1%E6%9C%BA%E7%B3%BB%E7%BB%9F%EF%BC%88spooling%EF%BC%89\"><span class=\"toc-text\">假脱机系统（spooling）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%93%E5%86%B2%E5%8C%BA%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">缓冲区管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%93%E5%86%B2%E7%9A%84%E5%BC%95%E5%85%A5%EF%BC%88%E5%8E%9F%E5%9B%A0%EF%BC%89\"><span class=\"toc-text\">缓冲的引入（原因）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%BC%93%E5%86%B2%E5%8C%BA\"><span class=\"toc-text\">单缓冲区</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E7%BC%93%E5%86%B2%E5%8C%BA\"><span class=\"toc-text\">双缓冲区</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%BD%A2%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%88%E4%B8%93%E4%B8%BA%E7%94%9F%E4%BA%A7%E8%80%85%E5%92%8C%E6%B6%88%E8%B4%B9%E8%80%85%E6%89%93%E9%80%A0%EF%BC%89\"><span class=\"toc-text\">环形缓冲区（专为生产者和消费者打造）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%93%E5%86%B2%E6%B1%A0-%E7%90%86%E8%A7%A3%E4%B8%BA%E6%9B%B4%E5%A4%A7%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA\"><span class=\"toc-text\">缓冲池(理解为更大的缓冲区)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A3%81%E7%9B%98%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E6%80%A7%E8%83%BD%E5%92%8C%E8%B0%83%E5%BA%A6\"><span class=\"toc-text\">磁盘存储器的性能和调度</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%84%E7%BB%87%E5%92%8C%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">数据的组织和格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A3%81%E7%9B%98%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">磁盘的类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A3%81%E7%9B%98%E8%AE%BF%E9%97%AE%E7%9A%84%E6%97%B6%E9%97%B4%EF%BC%88%E5%85%B3%E9%94%AE%EF%BC%89\"><span class=\"toc-text\">磁盘访问的时间（关键）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A3%81%E7%9B%98%E7%9A%84%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%EF%BC%88%E6%8E%8C%E6%8F%A1%E5%9B%BE%E8%A1%A8%EF%BC%89\"><span class=\"toc-text\">磁盘的调度算法（掌握图表）</span></a></li></ol></li></ol></li></ol>","author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"操作系统-进程的描述与控制","uid":"232069321853689fdbb7d700cb818436","slug":"操作系统-进程的描述与控制","date":"2022-01-17T10:56:41.805Z","updated":"2020-10-20T09:17:36.209Z","comments":true,"path":"api/articles/操作系统-进程的描述与控制.json","keywords":null,"cover":[],"text":"第二章进程的描述与控制前驱图和程序执行前驱图 前趋图：有向无循环图（DAG ）。描述一个程序的各部分（程序段或语句）间的依赖关系，或者是一个大的计算的各个子任务间的因果（前后）关系。 前驱图的定义 前趋图中的每个结点可以表示一条语句、一个程序段或一个进程，结点间的有向边表示两个结...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/tags/操作系统.json"},{"name":"进程","slug":"进程","count":1,"path":"api/tags/进程.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"操作系统-虚拟存储器","uid":"f121329dd6a12ba42543fd4b22b2c313","slug":"操作系统-虚拟存储器","date":"2022-01-17T10:56:41.795Z","updated":"2021-01-18T10:03:10.568Z","comments":true,"path":"api/articles/操作系统-虚拟存储器.json","keywords":null,"cover":[],"text":"第五章：虚拟存储器常规存储管理方式的特征一次性驻留性局部性原理程序在执行时将呈现出局部性特征，即在一较短的时间内，程序的执行仅局限于某个部分，相应地，它所访问的存储空间也局限于某个区域时间局限性 如果程序中的某条指令一旦执行， 则不久以后该指令可能再次执行；如果某数据被访问过， ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/tags/操作系统.json"},{"name":"虚拟存储器","slug":"虚拟存储器","count":1,"path":"api/tags/虚拟存储器.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}