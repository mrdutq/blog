{"title":"操作系统-进程的描述与控制","uid":"232069321853689fdbb7d700cb818436","slug":"操作系统-进程的描述与控制","date":"2022-01-17T10:56:41.805Z","updated":"2020-10-20T09:17:36.209Z","comments":true,"path":"api/articles/操作系统-进程的描述与控制.json","keywords":null,"cover":[],"content":"<h1 id=\"第二章进程的描述与控制\"><a href=\"#第二章进程的描述与控制\" class=\"headerlink\" title=\"第二章进程的描述与控制\"></a>第二章进程的描述与控制</h1><h2 id=\"前驱图和程序执行\"><a href=\"#前驱图和程序执行\" class=\"headerlink\" title=\"前驱图和程序执行\"></a>前驱图和程序执行</h2><h3 id=\"前驱图\"><a href=\"#前驱图\" class=\"headerlink\" title=\"前驱图\"></a>前驱图</h3><ul>\n<li>前趋图：有向无循环图（DAG ）。描述一个程序的各部<br>分（程序段或语句）间的依赖关系，或者是一个大的计<br>算的各个子任务间的因果（前后）关系。</li>\n</ul>\n<h4 id=\"前驱图的定义\"><a href=\"#前驱图的定义\" class=\"headerlink\" title=\"前驱图的定义\"></a>前驱图的定义</h4><ul>\n<li>前趋图中的每个结点可以表示一条语句、一个程序段或一个进程，结点间的有向边表示两个结点之间存在的偏序关系或前趋关系“→ ”。</li>\n<li>→ ＝ (Pi,Pj)| 在 Pj 开始前 Pi 必须完成 。如果 (Pi,Pj)∈→ ，可写成 Pi→Pj ，Pi是Pj的直接前趋，Pj是Pi的直接后继。</li>\n<li>没有前趋的结点称为初始结点，没有后继的结点称为终止结点。此外，每个结点还具有一个权值，用于表示该结点所含有的程序量或结点的执行时间。</li>\n</ul>\n<h3 id=\"程序顺序执行\"><a href=\"#程序顺序执行\" class=\"headerlink\" title=\"程序顺序执行\"></a>程序顺序执行</h3><ul>\n<li>必须按照某种先后次序逐个执行。</li>\n</ul>\n<h4 id=\"程序顺序执行时的特征\"><a href=\"#程序顺序执行时的特征\" class=\"headerlink\" title=\"程序顺序执行时的特征\"></a>程序顺序执行时的特征</h4><ul>\n<li>顺序性 ：一个程序各个部分的执行，严格地按照某种先后次序执行。</li>\n<li>封闭性 ：程序在封闭的环境下运行，即程序运行时独占全部系统资源。</li>\n<li>可再现性：只要程序执行时的环境和初始条件相同，当程序重复执行时，都将获得相同的结果。</li>\n</ul>\n<h3 id=\"程序并发执行\"><a href=\"#程序并发执行\" class=\"headerlink\" title=\"程序并发执行\"></a>程序并发执行</h3><ul>\n<li>指一组在逻辑上互相独立的程序或程序段在执行时间上客观上互相重叠，<br>即一个程序或程序段的执行尚未结束，另一个程序（段）的执行已经开始<br>的方式。</li>\n</ul>\n<h4 id=\"程序并发执行时的特征\"><a href=\"#程序并发执行时的特征\" class=\"headerlink\" title=\"程序并发执行时的特征\"></a>程序并发执行时的特征</h4><ul>\n<li>间断性（异步性）：互斥、同步</li>\n<li>失去封闭性 ：共享资源 → 失去封闭性</li>\n<li>不可再现性：失去封闭性 → 失去可再现性</li>\n</ul>\n<p>程序并发执行时的不可再现性是绝对不允许的；因此应<br>采取措施使并发程序保持其 可再现性 。<br>引入进程，对并发执行的程序加以描述和控制。</p>\n<h2 id=\"进程的描述\"><a href=\"#进程的描述\" class=\"headerlink\" title=\"进程的描述\"></a>进程的描述</h2><h3 id=\"进程的定义\"><a href=\"#进程的定义\" class=\"headerlink\" title=\"进程的定义\"></a>进程的定义</h3><ul>\n<li>进程是程序的一次执行</li>\n<li>进程是一个程序及其数据在处理机上顺序执行时所发生的活动</li>\n<li>进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位</li>\n</ul>\n<h3 id=\"进程的特征\"><a href=\"#进程的特征\" class=\"headerlink\" title=\"进程的特征\"></a>进程的特征</h3><ul>\n<li>动态性：进程的实质是程序在处理机上的一次执行过程，因此是<br>动态。动态性是进程的最基本的特征 。同时动态性还<br>表现在进程则是有生命期的，它 因创建而产生，因调<br>度而执行，因得不到资源而暂停，因撤消而消亡 。</li>\n<li>并发性：指多个进程实体同时存在于内存中，能在一段时间内同<br>时运行。引入进程的目的就是为了使进程能并发执行，<br>以提高资源利用率，所以并发性是进程的重要特征，也<br>是 OS 的重要特征。</li>\n<li>独立性：指进程是一个能独立运行的基本单位，也是系统进行资<br>源分配和调度的独立单位。</li>\n<li>异步性：指进程以各自独立的、不可预知的速度向前推进。</li>\n</ul>\n<h3 id=\"从操作系统角度分类\"><a href=\"#从操作系统角度分类\" class=\"headerlink\" title=\"从操作系统角度分类\"></a>从操作系统角度分类</h3><ul>\n<li>系统进程</li>\n<li>用户进程</li>\n</ul>\n<h3 id=\"进程和程序的区别\"><a href=\"#进程和程序的区别\" class=\"headerlink\" title=\"进程和程序的区别\"></a>进程和程序的区别</h3><ul>\n<li>进程是动态概念，而程序则是静态概念</li>\n<li>程序是指令的有序集合，永远存在；进程强调是程序在数据集上的一次执行，有创建有撤销，存在是暂时的；</li>\n<li>进程具有并发性，而程序没有</li>\n<li>进程可创建其他进程，而程序并不能形成新的程序</li>\n<li>进程是竞争计算机资源的基本单位，程序不是</li>\n</ul>\n<h3 id=\"进程和程序的联系\"><a href=\"#进程和程序的联系\" class=\"headerlink\" title=\"进程和程序的联系\"></a>进程和程序的联系</h3><ul>\n<li>进程是程序在数据集上的一次执行</li>\n<li>程序是构成进程的组成部分，一个程序可对应多个进程，一个进程可包括多个程序</li>\n<li>进程的运行目标是执行所对应的程序</li>\n<li>从静态看，进程由程序、数据和进程控制块（PCB）组成</li>\n</ul>\n<h3 id=\"进程的基本状态及转换\"><a href=\"#进程的基本状态及转换\" class=\"headerlink\" title=\"进程的基本状态及转换\"></a>进程的基本状态及转换</h3><ul>\n<li><p>进程的三种基本状态</p>\n<ul>\n<li><p>就绪状态ready</p>\n</li>\n<li><p>（运行）执行状态running</p>\n</li>\n<li><p>（等待）阻塞状态waiting</p>\n</li>\n</ul>\n</li>\n<li><p>三种基本状态的转换</p>\n<ul>\n<li>进程在运行期间并非固定处于某个状态，而是不断从一<br>个状态转换到另一个状态。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/mrdutq/cdn/images/os/%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E7%9A%84%E8%BD%AC%E6%8D%A2.jpg\" alt=\"进程状态的转换\"></p>\n</li>\n<li><p>创建状态和终止状态</p>\n<ul>\n<li>五状态进程模型</li>\n</ul>\n</li>\n<li><p>注意</p>\n<ul>\n<li>阻塞态-&gt;运行态和就绪态-&gt;阻塞态这二种状态转换不可能发生</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"挂起操作和进程状态的转换\"><a href=\"#挂起操作和进程状态的转换\" class=\"headerlink\" title=\"挂起操作和进程状态的转换\"></a>挂起操作和进程状态的转换</h3><ul>\n<li>挂起和阻塞的区别</li>\n<li>挂起操作的目的<ul>\n<li>终端用户的需要: 修改、检查进程</li>\n<li>父进程的需要：修改、协调子进程</li>\n<li>对换的需要：缓和内存</li>\n<li>负荷调节的需要：保证实时任务的执行</li>\n</ul>\n</li>\n<li>关键图<ul>\n<li>具有挂起状态的进程状态转换<br><img src=\"https://cdn.jsdelivr.net/gh/mrdutq/cdn/images/os/%E5%85%B7%E6%9C%89%E6%8C%82%E8%B5%B7%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2.jpg\" alt=\"具有挂起状态的进程状态转换\"></li>\n<li>具有创建、终止的进程状态转换<br><img src=\"https://cdn.jsdelivr.net/gh/mrdutq/cdn/images/os/%E5%85%B7%E6%9C%89%E5%88%9B%E5%BB%BA%E3%80%81%E7%BB%88%E6%AD%A2%E7%9A%84%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2.jpg\" alt=\"具有创建、终止的进程状态转换\"></li>\n<li>具有创建、终止、挂起状态的进程状态转换<br><img src=\"https://cdn.jsdelivr.net/gh/mrdutq/cdn/images/os/%E5%85%B7%E6%9C%89%E5%88%9B%E5%BB%BA%E3%80%81%E7%BB%88%E6%AD%A2%E3%80%81%E6%8C%82%E8%B5%B7%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2.jpg\" alt=\"具有创建、终止、挂起状态的进程状态转换\"></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"进程管理中的数据结构\"><a href=\"#进程管理中的数据结构\" class=\"headerlink\" title=\"进程管理中的数据结构\"></a>进程管理中的数据结构</h3><ul>\n<li>进程控制块PCB的作用<ul>\n<li>作为独立运行基本单位的标志（PCB 是进程存在的唯一标志。）</li>\n<li>能实现间断性运行方式</li>\n<li>提供进程管理所需要的信息</li>\n<li>提供进程调度所需要的信息</li>\n<li>实现与其他进程的同步与通信</li>\n</ul>\n</li>\n<li>进程控制块的信息<ul>\n<li>进程标识符<ul>\n<li>外部标识符PID</li>\n<li>内部标识符(端口)</li>\n</ul>\n</li>\n<li>处理机状态（断点信息）<ul>\n<li>通用寄存器</li>\n<li>指令计数器</li>\n<li>程序状态字PSW</li>\n<li>用户栈指针</li>\n</ul>\n</li>\n<li>进程调度信息<ul>\n<li>进程状态</li>\n<li>进程优先级</li>\n<li>进程调度所需的其他信息</li>\n<li>事件</li>\n</ul>\n</li>\n<li>进程控制信息<ul>\n<li>程序和数据的地址</li>\n<li>进程同步和通信机制</li>\n<li>资源清单</li>\n<li>链接指针</li>\n</ul>\n</li>\n<li>进程控制块的组织方式<ul>\n<li>线性方式</li>\n<li>链接方式</li>\n<li>索引方式</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"进程控制\"><a href=\"#进程控制\" class=\"headerlink\" title=\"进程控制\"></a>进程控制</h2><h3 id=\"操作系统内核\"><a href=\"#操作系统内核\" class=\"headerlink\" title=\"操作系统内核\"></a>操作系统内核</h3><ul>\n<li>两大功能<ul>\n<li>支撑功能<ul>\n<li>中断管理</li>\n<li>时钟管理</li>\n<li>原语操作<ul>\n<li>进程的管理，由若干原语（primitive）来执行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>资源管理功能<ul>\n<li>进程管理</li>\n<li>存储器管理</li>\n<li>设备管理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>状态<ul>\n<li>系统态，管态，内核态</li>\n<li>用户态，目态</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"进程的创建\"><a href=\"#进程的创建\" class=\"headerlink\" title=\"进程的创建\"></a>进程的创建</h3><ul>\n<li><p>进程的层次结构</p>\n<ul>\n<li>父进程</li>\n<li>子进程</li>\n</ul>\n</li>\n<li><p>引起创建进程的事件</p>\n<ul>\n<li>用户登录</li>\n<li>作业调度</li>\n<li>提供服务</li>\n<li>应用请求</li>\n</ul>\n</li>\n<li><p>进程的创建过程</p>\n<ul>\n<li>1.申请空白PCB</li>\n<li>2.为新进程分配其运行所需的资源</li>\n<li>3.初始化进程块PCB</li>\n<li>4.如果进程就绪队列能够接纳新进程，便将新进程插入就绪队列</li>\n</ul>\n</li>\n<li><p>进程的终止</p>\n<ul>\n<li>引起进程终止的事件<ul>\n<li>1.正常结束</li>\n<li>2.异常结束</li>\n<li>3.外界干预</li>\n</ul>\n</li>\n<li>进程的终止过程<ul>\n<li>1.根据被终止进程的标识符</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>进程的阻塞与唤醒</p>\n<ul>\n<li>引起进程阻塞和唤醒的事件<ul>\n<li>请求系统服务而未满足</li>\n<li>启动某种操作而阻塞当前进程</li>\n<li>新数据尚未到达</li>\n<li>无新工作可做：系统进程</li>\n</ul>\n</li>\n<li>进程阻塞过程(自己阻塞自己)</li>\n<li>进程唤醒过程(系统或其他进程唤醒自己)</li>\n</ul>\n</li>\n<li><p>进程的挂起与激活</p>\n<ul>\n<li>suspend</li>\n<li>active</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"进程同步\"><a href=\"#进程同步\" class=\"headerlink\" title=\"进程同步\"></a>进程同步</h3><ul>\n<li><p>基本概念</p>\n<ul>\n<li>两种形式的制约关系<ul>\n<li>间接相互制约关系<ul>\n<li>互斥——竞争</li>\n</ul>\n</li>\n<li>直接相互制约关系<ul>\n<li>同步——协作</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>临界资源</li>\n<li>分区<ul>\n<li>进入区enter section</li>\n<li>临界区critical section</li>\n<li>退出区exit section</li>\n<li>剩余区remainder section</li>\n</ul>\n</li>\n<li>同步机制应遵循的规则<ul>\n<li>1.空闲让进</li>\n<li>2.忙则等待</li>\n<li>3.有限等待</li>\n<li>4.让权等待</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>进程同步机制</p>\n<ul>\n<li>软件同步机制:都没有解决让权等待，而且部分方法还会产生死锁的情况</li>\n<li>硬件同步机制<ul>\n<li>关中断</li>\n<li>利用Test-and-Set指令实现互斥</li>\n<li>利用swap指令实现进程互斥</li>\n</ul>\n</li>\n<li>信号量机制<ul>\n<li>整型信号量</li>\n<li>记录型信号量<ul>\n<li>由于整型信号量没有遵循让权等待原则，记录型允许负数，即阻塞链表</li>\n</ul>\n</li>\n<li>AND型信号量</li>\n<li>信号量集<ul>\n<li>理解:AND型号量的wait和signal仅能对信号施以加1或减1操作，意味着每次只能对某类临界资源进行一个单位的申请或释放。当一次需要N个单位时，便要进行N次wait操作，这显然是低效的，甚至会增加死锁的概率。此外，在有些情况下，为确保系统的安全性，当所申请的资源数量低于某一下限值时，还必须进行管制，不予以分配。因此，当进程申请某类临界资源时，在每次分配前，都必须测试资源数量，判断是否大于可分配的下限值，决定是否予以分配</li>\n<li>操作<ul>\n<li>Swait(S1，t1，d1…Sn，tn，dn)</li>\n<li>Ssignal(S1，d1…Sn，dn)</li>\n<li>特殊情况</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>经典进程的同步问题</p>\n<ul>\n<li>生产者–消费者问题</li>\n<li>哲学家进餐问题</li>\n<li>读者–写者问题</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"进程通信\"><a href=\"#进程通信\" class=\"headerlink\" title=\"进程通信\"></a>进程通信</h2><h3 id=\"进程通信是指进程之间的信息交换，又称低级进程通信\"><a href=\"#进程通信是指进程之间的信息交换，又称低级进程通信\" class=\"headerlink\" title=\"进程通信是指进程之间的信息交换，又称低级进程通信\"></a>进程通信是指进程之间的信息交换，又称低级进程通信</h3><h3 id=\"进程通信的类型\"><a href=\"#进程通信的类型\" class=\"headerlink\" title=\"进程通信的类型\"></a>进程通信的类型</h3><ul>\n<li><p>共享存储器系统</p>\n<ul>\n<li>基于共享数据结构的通信方式<ul>\n<li>生产者和消费者</li>\n</ul>\n</li>\n<li>基于共享存储区的通信方式<ul>\n<li>高级通信</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>管道通信系统(pipe)</p>\n<ul>\n<li>高级通信</li>\n</ul>\n</li>\n<li><p>消息传递系统</p>\n<ul>\n<li>高级通信</li>\n<li>方式分类<ul>\n<li>直接通信</li>\n<li>间接通信</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>客服机–服务器系统</p>\n</li>\n</ul>\n<h3 id=\"消息传递通信的实现方式\"><a href=\"#消息传递通信的实现方式\" class=\"headerlink\" title=\"消息传递通信的实现方式\"></a>消息传递通信的实现方式</h3><ul>\n<li>直接消息传递系统</li>\n<li>信箱通信</li>\n</ul>\n<h2 id=\"线程的基本概念\"><a href=\"#线程的基本概念\" class=\"headerlink\" title=\"线程的基本概念\"></a>线程的基本概念</h2><h3 id=\"线程的引入\"><a href=\"#线程的引入\" class=\"headerlink\" title=\"线程的引入\"></a>线程的引入</h3><ul>\n<li><p>线程的引入正是为了简化线程间的通信，以小的开销来提高进程内的并发程度</p>\n</li>\n<li><p>多线程并发的不足</p>\n<ul>\n<li>进程的两个基本属性<ul>\n<li>一个拥有资源的独立单位，可独立分配系统资源</li>\n<li>一个可独立调度和分派的基本单位，PCB</li>\n</ul>\n</li>\n<li>程序并发执行所需付出的时空开销<ul>\n<li>创建进程</li>\n<li>撤销进程</li>\n<li>进程切换</li>\n<li>进程间通信效率低</li>\n<li>将分配资源和调度两个属性分开</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>线程——作为调度和分派的基本单位</p>\n<ul>\n<li>进程是系统资源分配的单位，线程是处理器调度的单位</li>\n<li>线程表示进程的一个控制点，可以执行一系列的指令。通常，和应用程序的一个函数相对应</li>\n<li>进程分解为线程还可以有效利用多处理器和多核计算机</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"线程与进程的比较\"><a href=\"#线程与进程的比较\" class=\"headerlink\" title=\"线程与进程的比较\"></a>线程与进程的比较</h3><ul>\n<li><p>不同点</p>\n<ul>\n<li>调度的基本单位</li>\n<li>并发性</li>\n</ul>\n</li>\n<li><p>相似点</p>\n<ul>\n<li>状态：运行、阻塞、就绪</li>\n<li>线程具有一定的生命期</li>\n<li>进程可创建线程，一个线程可创建另一个子线程</li>\n<li>多个线程并发执行时仍然存在互斥与同步</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"线程的实现\"><a href=\"#线程的实现\" class=\"headerlink\" title=\"线程的实现\"></a>线程的实现</h3><ul>\n<li><p>线程的实现方式</p>\n<ul>\n<li>内核支持线程KST</li>\n<li>用户级线程ULT</li>\n<li>组合方式</li>\n</ul>\n</li>\n<li><p>多线程OS中的进程属性</p>\n<ul>\n<li>进程是一个可拥有资源的基本单位</li>\n<li>多个线程可并发执行</li>\n<li>进程已不是可执行的实体</li>\n</ul>\n</li>\n<li><p>线程的状态和线程控制块</p>\n<ul>\n<li>线程运行的三个状态<ul>\n<li>执行状态</li>\n<li>就绪状态</li>\n<li>阻塞状态</li>\n</ul>\n</li>\n<li>线程控制块TCB</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/mrdutq/cdn/images/os/ch2.png\" alt=\"OS—CH2\"></p>\n","text":"第二章进程的描述与控制前驱图和程序执行前驱图 前趋图：有向无循环图（DAG ）。描述一个程序的各部分（程序段或语句）间的依赖关系，或者是一个大的计算的各个子任务间的因果（前后）关系。 前驱图的定义 前趋图中的每个结点可以表示一条语句、一个程序段或一个进程，结点间的有向边表示两个结...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/tags/操作系统.json"},{"name":"进程","slug":"进程","count":1,"path":"api/tags/进程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%AB%A0%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0%E4%B8%8E%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">第二章进程的描述与控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E9%A9%B1%E5%9B%BE%E5%92%8C%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">前驱图和程序执行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E9%A9%B1%E5%9B%BE\"><span class=\"toc-text\">前驱图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%89%8D%E9%A9%B1%E5%9B%BE%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">前驱图的定义</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">程序顺序执行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C%E6%97%B6%E7%9A%84%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">程序顺序执行时的特征</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E5%B9%B6%E5%8F%91%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">程序并发执行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E5%B9%B6%E5%8F%91%E6%89%A7%E8%A1%8C%E6%97%B6%E7%9A%84%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">程序并发执行时的特征</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">进程的描述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">进程的定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">进程的特征</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%A7%92%E5%BA%A6%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">从操作系统角度分类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">进程和程序的区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%81%94%E7%B3%BB\"><span class=\"toc-text\">进程和程序的联系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%8A%B6%E6%80%81%E5%8F%8A%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">进程的基本状态及转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%82%E8%B5%B7%E6%93%8D%E4%BD%9C%E5%92%8C%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E7%9A%84%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">挂起操作和进程状态的转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">进程管理中的数据结构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">进程控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8\"><span class=\"toc-text\">操作系统内核</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">进程的创建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">进程同步</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1\"><span class=\"toc-text\">进程通信</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E6%98%AF%E6%8C%87%E8%BF%9B%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BF%A1%E6%81%AF%E4%BA%A4%E6%8D%A2%EF%BC%8C%E5%8F%88%E7%A7%B0%E4%BD%8E%E7%BA%A7%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1\"><span class=\"toc-text\">进程通信是指进程之间的信息交换，又称低级进程通信</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">进程通信的类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92%E9%80%9A%E4%BF%A1%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">消息传递通信的实现方式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">线程的基本概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">线程的引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">线程与进程的比较</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">线程的实现</span></a></li></ol></li></ol></li></ol>","author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数据结构-线性表","uid":"cc5068c18e9979834bedd7237675997e","slug":"数据结构-线性表","date":"2022-01-17T10:56:41.812Z","updated":"2020-09-25T16:57:26.074Z","comments":true,"path":"api/articles/数据结构-线性表.json","keywords":null,"cover":null,"text":"考核方式 平时成绩：40% 作业、考勤：10% 实验(源代码、实验报告)：15% 过程性评价(3次，5分/次)：15% 课堂纪律 无故迟到3次=1次旷课 无故旷课：-2分/次 上课玩手机、玩游戏：-2分/次 期末成绩：60% 闭卷、笔试 抽象数据类型的表示ADT = (D,R,P...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":2,"path":"api/categories/数据结构.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":2,"path":"api/tags/数据结构.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"操作系统-输入输出系统","uid":"d58045765cfed11a5e19353201052243","slug":"操作系统-输入输出系统","date":"2022-01-17T10:56:41.800Z","updated":"2021-01-18T10:05:55.416Z","comments":true,"path":"api/articles/操作系统-输入输出系统.json","keywords":null,"cover":[],"text":"第六章：输入输出系统I/O系统的功能，模型和接口I/O系统管理的对象是I/O设备和相应的设备控制器。I/O系统的基本功能 隐藏物理设备的细节 与设备的无关性 提高处理机和I/O设备的利用率 对I/O设备进行控制 确保对设备的正确共享 错误处理 I/O软件的层次结构 用户层I/O软...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":7,"path":"api/tags/操作系统.json"},{"name":"输入输出系统","slug":"输入输出系统","count":1,"path":"api/tags/输入输出系统.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}