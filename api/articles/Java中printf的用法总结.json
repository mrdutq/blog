{"title":"Java中printf的用法总结","uid":"c8b591938b42885c6ab3d1307076232f","slug":"Java中printf的用法总结","date":"2022-01-17T10:56:41.749Z","updated":"2020-08-16T00:02:56.001Z","comments":true,"path":"api/articles/Java中printf的用法总结.json","keywords":null,"cover":null,"content":"<h1 id=\"printf的格式控制的完整格式：\"><a href=\"#printf的格式控制的完整格式：\" class=\"headerlink\" title=\"printf的格式控制的完整格式：\"></a>printf的格式控制的完整格式：</h1><span id=\"more\"></span>\n<pre><code>%  -  0  m.n  l或h  格式字符 \n\n下面对组成格式说明的各项加以说明： \n①%：表示格式说明的起始符号，不可缺少。 \n\n②-：有-表示左对齐输出，如省略表示右对齐输出。\n\n③0：有0表示指定空位填0,如省略表示指定空位不填。\n\n④m.n：m指域宽，即对应的输出项在输出设备上所占的字符数。N指精度。用于说明输出的实型数的小数位数。为指定n时，隐含的精度为n=6位。 \n\n⑤l或h:l对整型指long型，对实型指double型。h用于将整型的格式字符修正为short型。 \n</code></pre>\n<hr>\n<h1 id=\"格式字符\"><a href=\"#格式字符\" class=\"headerlink\" title=\"格式字符\"></a>格式字符</h1><p>格式字符用以指定输出项的<strong>数据类型</strong>和<strong>输出格式</strong>。 </p>\n<p>①d格式：用来输出十进制整数。有以下几种用法：<br>  %d：按整型数据的实际长度输出。<br>  %md：m为指定的输出字段的宽度。如果数据的位数小于m，则左端补以空格，若大于m，则按实际位数输出。<br>  %ld：输出长整型数据。 </p>\n<p>②o格式：以无符号八进制形式输出整数。对长整型可以用”%lo”格式输出。同样也可以指定字段宽度用“%mo”格式输出。 </p>\n<p>③x格式：以无符号十六进制形式输出整数。对长整型可以用”%lx”格式输出。同样也可以指定字段宽度用”%mx”格式输出。 </p>\n<p>④u格式：以无符号十进制形式输出整数。对长整型可以用”%lu”格式输出。同样也可以指定字段宽度用“%mu”格式输出。 //不可使用  //在实践中没有运行出来。</p>\n<p>⑤c格式：输出一个字符。 </p>\n<p>⑥s格式：用来输出一个串。有几中用法<br>  %s：例如:printf(“%s”, “CHINA”)输出”CHINA”字符串（不包括双引号）。<br>  %ms：输出的字符串占m列，如字符串本身长度大于m，则突破获m的限制,将字符串全部输出。若串长小于m，则左补空格。<br>  %-ms：如果串长小于m，则在m列范围内，字符串向左靠，右补空格。<br>  %m.ns：输出占m列，但只取字符串中左端n个字符。这n个字符输出在m列的右侧，左补空格。<br>  %-m.ns：其中m、n含义同上，n个字符输出在m列范围的左侧，右补空格。如果n&gt;m，则自动取n值，即保证n个字符正常输出。 </p>\n<p>⑦f格式：用来输出实数（包括单、双精度），以小数形式输出。有以下几种用法：<br>  %f：不指定宽度，整数部分全部输出并输出6位小数。<br>  %m.nf：输出共占m列，其中有n位小数，如数值宽度小于m左端补空格。<br>  %-m.nf：输出共占n列，其中有n位小数，如数值宽度小于m右端补空格。 </p>\n<p>⑧e格式：以指数形式输出实数。可用以下形式：//在实践中没有运行出来。<br>  %e：数字部分（又称尾数）输出6位小数，指数部分占5位或4位。<br>  %m.ne和%-m.ne：m、n和”-”字符含义与前相同。此处n指数据的数字部分的小数位数，m表示整个输出数据所占的宽度。 </p>\n<p>⑨g格式：自动选f格式或e格式中较短的一种输出，且不输出无意义的零。 //在实践中没有运行出来。 </p>\n<hr>\n<h1 id=\"关于printf函数的进一步说明：\"><a href=\"#关于printf函数的进一步说明：\" class=\"headerlink\" title=\"关于printf函数的进一步说明：\"></a>关于printf函数的进一步说明：</h1><p>如果想输出字符”%”,则应该在“格式控制”字符串中用连续两个%表示，如:<br>printf(“%f%%”, 1.0/3);<br>输出0.333333%。 </p>\n<hr>\n<p>对于单精度数，使用%f格式符输出时，仅前7位是有效数字，小数6位．<br>对于双精度数，使用%lf格式符输出时，前16位是有效数字，小数6位． </p>\n<hr>\n<p>对于m.n的格式还可以用如下方法表示（例） </p>\n<p>char ch[20];</p>\n<p>printf(“%*.*s\\n”,m,n,ch); </p>\n<p>前边的*定义的是总的宽度，后边的定义的是输出的个数。分别对应外面的参数m和n 。我想这种方法的好处是可以在语句之外对参数m和n赋值，从而控制输出格式。 </p>\n<hr>\n","text":"printf的格式控制的完整格式： % - 0 m.n l或h 格式字符 下面对组成格式说明的各项加以说明： ①%：表示格式说明的起始符号，不可缺少。 ②-：有-表示左对齐输出，如省略表示右对齐输出。 ③0：有0表示指定空位填0,如省略表示指定空位不填。 ④m.n：m指域宽，即对...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"java","slug":"java","count":1,"path":"api/categories/java.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"printf","slug":"printf","count":1,"path":"api/tags/printf.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#printf%E7%9A%84%E6%A0%BC%E5%BC%8F%E6%8E%A7%E5%88%B6%E7%9A%84%E5%AE%8C%E6%95%B4%E6%A0%BC%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">printf的格式控制的完整格式：</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A0%BC%E5%BC%8F%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">格式字符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8Eprintf%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AF%B4%E6%98%8E%EF%BC%9A\"><span class=\"toc-text\">关于printf函数的进一步说明：</span></a></li></ol>","author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MySQL","uid":"838ae74e3a76757d637de803a615bfd9","slug":"MySQL","date":"2022-01-17T10:56:41.751Z","updated":"2021-08-04T08:21:00.982Z","comments":true,"path":"api/articles/MySQL.json","keywords":null,"cover":[],"text":"1、数据库的安装2、操作数据库2.1、数据库的操作（了解）1、创建数据库 CREATE DATABASE [IF NOT EXISTS] myDataBase; 2、删除数据库 DROP DATABASE [IF EXISTS] myDataBase; 3、使用数据库 – tab...","link":"","photos":[],"count_time":{"symbolsCount":"39k","symbolsTime":"36 mins."},"categories":[{"name":"数据库","slug":"数据库","count":1,"path":"api/categories/数据库.json"}],"tags":[{"name":"数据库","slug":"数据库","count":1,"path":"api/tags/数据库.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"JavaWeb-Tomcat","uid":"663b9fbae5507fcba43e46e7e9b1ce0c","slug":"JavaWeb-Tomcat","date":"2022-01-17T10:56:41.743Z","updated":"2020-09-25T15:55:10.291Z","comments":true,"path":"api/articles/JavaWeb-Tomcat.json","keywords":null,"cover":[],"text":"JavaWeb-Tomcat下载链接 Tomcat官网 Tomcat目录层次结构 bin: 存放启动和关闭Tomcat的脚本文件 conf: 存放Tomcat服务器的配置文件 lib: 存放Tomcat服务器的支撑jar包 logs: 存放Tomcat的日志文件 temp: 存放...","link":"","photos":[],"count_time":{"symbolsCount":541,"symbolsTime":"1 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":2,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":2,"path":"api/tags/JavaWeb.json"},{"name":"Tomcat","slug":"Tomcat","count":1,"path":"api/tags/Tomcat.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}