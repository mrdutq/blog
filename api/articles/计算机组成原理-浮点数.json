{"title":"计算机组成原理-浮点数","uid":"9ac10ec9c70f0945e2923867a095c3ac","slug":"计算机组成原理-浮点数","date":"2022-01-17T10:56:41.899Z","updated":"2020-09-25T16:56:10.975Z","comments":true,"path":"api/articles/计算机组成原理-浮点数.json","keywords":null,"cover":null,"content":"<span id=\"more\"></span>\n\n<p>浮点数：小数点位置可变，形如科学计数法中的数据表示<br>浮点数格式定义N=R<sup>e</sup>*M<br>M:尾数，是一个纯小数，表示数据的全部有效数位，其位数决定着数值的精度<br>R:基数，可以取2、8、10、16，表示当前的数制；<br>        微机中，一般默认为2，隐含表示<br>e:阶码，是一个整数，用于支出小数点在该数中的位置，其位数决定着数据的取值范围</p>\n<p>机器数的一般表示形式</p>\n<pre><code>阶符--阶码--数符--尾数\n四个元素的顺序可以变化。\n</code></pre>\n<p>浮点数规格化</p>\n<p>  规格化的目的</p>\n<pre><code>  保证浮点数表示的唯一性\n  保留更多地有效数字，提高运算地精度\n</code></pre>\n<p>  规格化要求：</p>\n<pre><code>  |尾数|&gt;=0.5\n    尾数原码表示：最高数值位为1，整数0.1...,负数1.1....;\n    尾数补码表示：最高数值位和符号位相反，正数0.1..，负数1.0...\n</code></pre>\n<p>  规格化处理</p>\n<pre><code>  尾数向左移n位(小数点右移)，同时阶码减n；--左规\n\n  尾数向右移n位(小数点左移)，同时阶码加n；--右规\n</code></pre>\n","text":" 浮点数：小数点位置可变，形如科学计数法中的数据表示浮点数格式定义N=Re*MM:尾数，是一个纯小数，表示数据的全部有效数位，其位数决定着数值的精度R:基数，可以取2、8、10、16，表示当前的数制； 微机中，一般默认为2，隐含表示e:阶码，是一个整数，用于支出小数点在该数中的位...","link":"","photos":[],"count_time":{"symbolsCount":427,"symbolsTime":"1 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":3,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":3,"path":"api/tags/计算机组成原理.json"}],"toc":"","author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"计算机组成原理-第一讲","uid":"8e1f7beebe75d1d20edcf7f0a6ab26b1","slug":"计算机组成原理-第一讲","date":"2022-01-17T10:56:41.905Z","updated":"2020-09-25T16:56:08.542Z","comments":true,"path":"api/articles/计算机组成原理-第一讲.json","keywords":null,"cover":null,"text":" 考核要求期末考试成绩60% 卷面为100分，折合50% 期中考试成绩20% 卷面为100分，折合20% 平时成绩20% 5份实验报告不齐者，平时成绩一律为0！！ 评定参考依据 实验出勤和完成情况，实验报告书写情况； 作业完成情况，上课的出勤情况； 随堂的题目测试情况 参考教材 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":3,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":3,"path":"api/tags/计算机组成原理.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"蓝桥杯-95.费解的开关2021/03/10","uid":"1b5a1b151f5f6c9cafa34c99fdd17e6f","slug":"蓝桥杯-95-费解的开关详解","date":"2022-01-17T10:56:41.894Z","updated":"2021-03-10T15:32:21.346Z","comments":true,"path":"api/articles/蓝桥杯-95-费解的开关详解.json","keywords":null,"cover":null,"text":"题目：95.费解的开关题目介绍你玩过“拉灯”游戏吗？ 25 盏灯排成一个 5×5 的方形。 每一个灯都有一个开关，游戏者可以改变它的状态。 每一步，游戏者可以改变某一个灯的状态。 游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。 我们用数字 1...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":2,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"蓝桥杯","slug":"蓝桥杯","count":1,"path":"api/tags/蓝桥杯.json"},{"name":"递归与递推","slug":"递归与递推","count":1,"path":"api/tags/递归与递推.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}