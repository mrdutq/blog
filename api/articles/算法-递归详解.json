{"title":"算法-递归详解","uid":"82472039c82658fae3f1ced7e41fd7b3","slug":"算法-递归详解","date":"2022-01-17T10:56:41.888Z","updated":"2020-09-25T16:57:43.747Z","comments":true,"path":"api/articles/算法-递归详解.json","keywords":null,"cover":[],"content":"<hr>\n<span id=\"more\"></span>\n\n<h1 id=\"递归从入门到精通\"><a href=\"#递归从入门到精通\" class=\"headerlink\" title=\"递归从入门到精通\"></a>递归从入门到精通</h1><h2 id=\"递归入门\"><a href=\"#递归入门\" class=\"headerlink\" title=\"递归入门\"></a>递归入门</h2><h3 id=\"编写一个递归函数\"><a href=\"#编写一个递归函数\" class=\"headerlink\" title=\"编写一个递归函数\"></a>编写一个递归函数</h3><ul>\n<li>这个递归函数的功能是什么，怎样调用这个函数，即设计好递归函数的返回值和参数列表</li>\n<li>什么时候应该结束这个递归，它的边界条件（出口）是什么  （边界条件）</li>\n<li>在非边界情况时，怎样从第n层转变成第n+1层  (递推公式)</li>\n</ul>\n<h3 id=\"计算阶乘-factorial\"><a href=\"#计算阶乘-factorial\" class=\"headerlink\" title=\"计算阶乘(factorial)\"></a>计算阶乘(factorial)</h3><p>$$<br>n!=\\begin{cases}<br>1 &amp; n=0 \\<br>n*(n-1)! &amp; n&gt;0<br>\\end{cases}<br>$$</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//调用（递归）函数</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"E:/CS专业课/蓝桥杯/递归讲解v1.5/递归.assets/1563853220522.png\" alt=\"1563853220522\"></p>\n<h3 id=\"计算斐波那契数列\"><a href=\"#计算斐波那契数列\" class=\"headerlink\" title=\"计算斐波那契数列\"></a>计算斐波那契数列</h3><p>Fibonacci sequence：0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ……<br>$$<br>f(n)=\\begin{cases}<br>0 &amp; n=0 \\<br>1 &amp; n=1 \\<br>f(n-2)+f(n-1) &amp; n&gt;1<br>\\end{cases}<br>$$</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"E:/CS专业课/蓝桥杯/递归讲解v1.5/递归.assets/1563854311429.png\" alt=\"1563854311429\"></p>\n<h3 id=\"计算最大公约数-辗转相除法\"><a href=\"#计算最大公约数-辗转相除法\" class=\"headerlink\" title=\"计算最大公约数(辗转相除法)\"></a>计算最大公约数(辗转相除法)</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">gcd(12, 32) &#x3D; 4\n\ngcd(a,   b)\ngcd(32,  12)\ngcd(12,  8)\ngcd(8,   4)\ngcd(4,   0)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>$$<br>gcd(a,b)=\\begin{cases}<br>a &amp; b=0 \\<br>gcd(b,a % b) &amp; b\\neq 0<br>\\end{cases}<br>$$</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"分治算法\"><a href=\"#分治算法\" class=\"headerlink\" title=\"分治算法\"></a>分治算法</h3><p>分治法的设计思想：</p>\n<ol>\n<li>分–将问题分解为规模更小的子问题；</li>\n<li>治–将这些规模更小的子问题逐个击破；</li>\n<li>合–将已解决的子问题合并，最终得出“母”问题的解；</li>\n</ol>\n<ul>\n<li>减而治之（每次让问题的规模减1）</li>\n<li>分而治之（每次让问题的规模减半）（归并排序的思想）</li>\n</ul>\n<h3 id=\"例题：走楼梯\"><a href=\"#例题：走楼梯\" class=\"headerlink\" title=\"例题：走楼梯\"></a>例题：走楼梯</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">题目描述：\n一个台阶总共有n级，如果一次可以跳1级，也可以跳2级。求总共有多少总跳法。\n第一行输入T，表示有多少个测试数据。接下来T行，每行输入一个数n，表示台阶的阶数。\n输出时每一行对应一个输出。\n\n样例输入：\n3\n5\n8\n10\n\n样例输出：\n8\n34\n89<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>解析：</p>\n<p>$$<br>f(n)=\\begin{cases}<br>1 &amp; n=1 \\<br>2 &amp; n=2 \\<br>f(n-1)+f(n-2) &amp; n&gt;2<br>\\end{cases}<br>$$</p>\n<p>参考代码：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">int</span> T<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>T<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><p><img src=\"E:/CS专业课/蓝桥杯/递归讲解v1.5/递归.assets/图02-19.归并排序实例.png\" alt=\"图02-19.归并排序实例\"></p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> A<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lo <span class=\"token operator\">>=</span> hi<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> lo <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>hi <span class=\"token operator\">-</span> lo<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> lo<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//左半区间[lo, mid] 排好序</span>\n\t<span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//右半区间[mid + 1, hi] 排好序</span>\n\t<span class=\"token function\">mergeArray</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> lo<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">,</span> hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//进行合并</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"E:/CS专业课/蓝桥杯/递归讲解v1.5/递归.assets/图02-18.有序向量的二路归并实例.png\" alt=\"图02-18.有序向量的二路归并实例\"></p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">mergeArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> A<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mid<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>hi <span class=\"token operator\">-</span> lo <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> lo<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> mid <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> A<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> temp<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> temp<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> mid<span class=\"token punctuation\">)</span> temp<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> hi<span class=\"token punctuation\">)</span> temp<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> lo<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> hi<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tA<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> temp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> A<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lo <span class=\"token operator\">>=</span> hi<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> lo <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>hi <span class=\"token operator\">-</span> lo<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> lo<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//左半区间[lo, mid] 排好序</span>\n\t<span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//右半区间[mid + 1, hi] 排好序</span>\n\t<span class=\"token function\">mergeArray</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> lo<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">,</span> hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//进行合并</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">int</span> A<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> N <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">:</span> A<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n","text":" 递归从入门到精通递归入门编写一个递归函数 这个递归函数的功能是什么，怎样调用这个函数，即设计好递归函数的返回值和参数列表 什么时候应该结束这个递归，它的边界条件（出口）是什么 （边界条件） 在非边界情况时，怎样从第n层转变成第n+1层 (递推公式) 计算阶乘(factorial...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"算法","slug":"算法","count":1,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A\"><span class=\"toc-text\">递归从入门到精通</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92%E5%85%A5%E9%97%A8\"><span class=\"toc-text\">递归入门</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">编写一个递归函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98-factorial\"><span class=\"toc-text\">计算阶乘(factorial)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97\"><span class=\"toc-text\">计算斐波那契数列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0-%E8%BE%97%E8%BD%AC%E7%9B%B8%E9%99%A4%E6%B3%95\"><span class=\"toc-text\">计算最大公约数(辗转相除法)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">分治算法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98%EF%BC%9A%E8%B5%B0%E6%A5%BC%E6%A2%AF\"><span class=\"toc-text\">例题：走楼梯</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">归并排序</span></a></li></ol></li></ol></li></ol>","author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"蓝桥杯-95.费解的开关2021/03/10","uid":"1b5a1b151f5f6c9cafa34c99fdd17e6f","slug":"蓝桥杯-95-费解的开关详解","date":"2022-01-17T10:56:41.894Z","updated":"2021-03-10T15:32:21.346Z","comments":true,"path":"api/articles/蓝桥杯-95-费解的开关详解.json","keywords":null,"cover":null,"text":"题目：95.费解的开关题目介绍你玩过“拉灯”游戏吗？ 25 盏灯排成一个 5×5 的方形。 每一个灯都有一个开关，游戏者可以改变它的状态。 每一步，游戏者可以改变某一个灯的状态。 游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。 我们用数字 1...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":2,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"蓝桥杯","slug":"蓝桥杯","count":1,"path":"api/tags/蓝桥杯.json"},{"name":"递归与递推","slug":"递归与递推","count":1,"path":"api/tags/递归与递推.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"空中交通管理","uid":"57e1324765d5f8241090ef5d7b0d2caa","slug":"空中交通管理","date":"2022-01-17T10:56:41.882Z","updated":"2020-08-16T00:01:58.940Z","comments":true,"path":"api/articles/空中交通管理.json","keywords":null,"cover":null,"text":"进度计划 第一周 第一章-绪论 第二周 第二章-管理机构及职能 第三周 第三章-航空器和飞行高度层 第四周 第四章-机场、机场的组织与管理 第五周 第五章-空域、空域的概述和分类、管理、使用 第六周 第六章空中交通服务通信、航空固定通信设施 第七周 春季校运会放假 第八周 第六章...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"航空管理","slug":"航空管理","count":1,"path":"api/tags/航空管理.json"}],"author":{"name":"天琦","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"为天地立心，为生民立命，为往圣继绝学，为万世开太平！！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}